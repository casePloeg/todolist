{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/AddItem.js","components/Footer.js","components/DropDown.js","components/SortWithDropDown.js","components/FilterWithDropDown.js","components/Header.js","components/TodoItem.js","components/ItemList.js","components/MobileMenu.js","components/Todo/index.js","components/AddFilter.js","components/Config/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","message","messages","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","TODO","SIGN_IN","HOME","ADMIN","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","ROUTES","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","SignOutButton","bind","assertThisInitialized","className","Navigation","showMenu","menuBtnClass","menuClass","toggleMenu","class","Navigation_NavigationAuth","Navigation_NavigationNonAuth","NavigationAuth","_ref","Link","to","ROLES","SignOut","NavigationNonAuth","_ref2","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","catch","code","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","SignUpForm","SignUp","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","id","completed","text","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","MessageItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","Messages_MessageItem","Messages","onListenForMessages","loading","orderByChild","limitToLast","limit","on","messageObject","messageList","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","remove","onNextPage","off","Messages_MessageList","HomePage","components_Messages","PasswordChangeForm","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","UserList","usersObject","usersList","pathname","UserItem","onSendPasswordResetEmail","params","Switch","Route","exact","path","component","AddItem","e","todayObj","Date","todayStr","getFullYear","getMonth","getDate","console","log","handleNewItem","onKeyPress","search","Footer","completedToday","createdToday","dueToday","overdue","filter","sort","withDropDown","WrappedComponent","_Component","_class","dropClass","showDropDown","prevState","SortBar","setSort","FilterBar","setFilter","filterButtons","filters","onFocus","onBlur","Header","FilterWithDropDown","resetFilter","SortWithDropDown","toggleCompleted","ToDoItem","item","itemClass","handleChange","deleteItem","ItemList","todoItems","items","cat","slice","TodoItem","MobileMenu","filterShow","sortShow","statsShow","displayFilter","displaySort","displayStats","Todo","todos","showCompleted","todoComponent","handleFiter","handleFilter","handleSort","numToday","snap","forEach","itemSnap","d","today","getNumToday","numOverdue","dueD","compD","getDueToday","getCompletedToday","getCreatedToday","getOverdue","uCompleted","uText","replace","updates","update","runAllGetTodays","_this5","userDbRef","child","newId","_this6","parseInt","priMatches","pri","contextMatches","contextRegex","exec","projectMatches","projectRegex","project","dueMatches","due","conv_due","days","todayDate","dayOfWeek","getDay","dueDayofWeek","indexOf","deltaDays","created","_this7","dbRefObject","tag","split","startsWith","sortedItems","priorities","undefined","index","b","charCodeAt","contexts","projects","sortType","fName","charAt","toUpperCase","sortContext","filterItems","sortItems","toConsumableArray","components_MobileMenu","components_Header","components_AddItem","components_ItemList","components_Footer","handleNewFilter","ConfigPage","newFilter","AddFilter","BrowserRouter","basename","components_Navigation","TodoPage","LandingPage","SignUpPage","AccountPage","AdminPage","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74c1437a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = [];\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","export const LANDING = process.env.PUBLIC_URL + '/';\r\nexport const TODO = process.env.PUBLIC_URL + '/todo';\r\nexport const SIGN_UP = process.env.PUBLIC_URL + '/signup';\r\nexport const SIGN_IN = process.env.PUBLIC_URL + '/signin';\r\nexport const HOME = process.env.PUBLIC_URL + '/home';\r\nexport const ACCOUNT = process.env.PUBLIC_URL + '/account';\r\nexport const PASSWORD_FORGET = process.env.PUBLIC_URL + '/pw-forget';\r\nexport const ADMIN = process.env.PUBLIC_URL + '/admin';\r\nexport const ADMIN_DETAILS = process.env.PUBLIC_URL + '/admin/:id';\r\nexport const CONFIG = process.env.PUBLIC_URL + '/config';\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN),\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass SignOutButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.props.history.push(ROUTES.SIGN_IN);\r\n    this.props.firebase.doSignOut();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        className=\"nav-link\"\r\n        onClick={() => {\r\n          this.onClick();\r\n        }}\r\n      >\r\n        Sign Out\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withFirebase(SignOutButton));\r\n","export const ADMIN = 'ADMIN';\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showMenu: false, menuBtnClass: '', menuClass: '' };\r\n\r\n    //bound methods\r\n\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n  }\r\n\r\n  toggleMenu() {\r\n    if (!this.state.showMenu) {\r\n      this.setState(() => {\r\n        return {\r\n          menuBtnClass: 'close',\r\n          menuClass: 'show',\r\n          showMenu: true,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return { menuBtnClass: '', menuClass: '', showMenu: false };\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          class={'menu-btn ' + this.state.menuBtnClass}\r\n          onClick={() => this.toggleMenu()}\r\n        >\r\n          <div class=\"btn-line\" />\r\n          <div class=\"btn-line\" />\r\n          <div class=\"btn-line\" />\r\n        </div>\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            authUser ? (\r\n              <NavigationAuth\r\n                toggleMenu={this.toggleMenu}\r\n                authUser={authUser}\r\n                menuClass={this.state.menuClass}\r\n              />\r\n            ) : (\r\n              <NavigationNonAuth\r\n                toggleMenu={this.toggleMenu}\r\n                menuClass={this.state.menuClass}\r\n              />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst NavigationAuth = ({ authUser, menuClass, toggleMenu }) => (\r\n  <nav className={'menu ' + menuClass}>\r\n    <ul onClick={() => toggleMenu()}>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.LANDING}>\r\n          Landing\r\n        </Link>\r\n      </li>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.HOME}>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.ACCOUNT}>\r\n          Account\r\n        </Link>\r\n      </li>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.TODO}>\r\n          Todo List\r\n        </Link>\r\n      </li>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.CONFIG}>\r\n          Config\r\n        </Link>\r\n      </li>\r\n      {authUser.roles.includes(ROLES.ADMIN) && (\r\n        <li className={'nav-item ' + menuClass}>\r\n          <Link className=\"nav-link\" to={ROUTES.ADMIN}>\r\n            Admin\r\n          </Link>\r\n        </li>\r\n      )}\r\n      <li className={'nav-item ' + menuClass}>\r\n        <SignOutButton className=\"nav-link\" />\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nconst NavigationNonAuth = ({ menuClass, toggleMenu }) => (\r\n  <nav className={'menu ' + menuClass}>\r\n    <ul onClick={() => toggleMenu()}>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.LANDING}>\r\n          Landing\r\n        </Link>\r\n      </li>\r\n      <li className={'nav-item ' + menuClass}>\r\n        <Link className=\"nav-link\" to={ROUTES.SIGN_IN}>\r\n          Sign In\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <h1>Landing</h1>\r\n    <p>\r\n      Welcome to my todo.txt , online. This is a web implication of\r\n      the todo.txt software, designed with the Getting Things Done\r\n      methodology in mind. Sign in with a Google account and gain\r\n      access to your todo list any where you go! Start doing things\r\n      today.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  isAdmin: false,\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with this E-Mail address already exists.\r\n  Try to login with this account instead. If you think the\r\n  account is already used from one of the social logins, try\r\n  to sign in with one of them. Afterward, associate your accounts\r\n  on your personal account page.\r\n`;\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = [];\r\n\r\n    if (isAdmin) {\r\n      roles.push(ROLES.ADMIN);\r\n    }\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // add the user to the todosdata\r\n\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email,\r\n          roles,\r\n        });\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .then(() => {})\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <SignInGoogle />\r\n    <SignInFacebook />\r\n    <SignInTwitter />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  'auth/account-exists-with-different-credential';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInGoogleBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithGoogle()\r\n      .then(socialAuthUser => {\r\n        // Add a todo list for the user\r\n        this.props.firebase.db\r\n          .ref('/todosData/' + socialAuthUser.user.uid + '/0')\r\n          .set({ id: 0, completed: false, text: 'make a todo list' });\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: [],\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.TODO);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Google</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInFacebookBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithFacebook()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: [],\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Facebook</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInTwitterBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithTwitter()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: [],\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Twitter</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nconst SignInGoogle = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInGoogleBase);\r\n\r\nconst SignInFacebook = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFacebookBase);\r\n\r\nconst SignInTwitter = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInTwitterBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\r\n","import React, { Component } from 'react';\r\n\r\nclass MessageItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.message.text,\r\n    };\r\n  }\r\n\r\n  onToggleEditMode = () => {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.message.text,\r\n    }));\r\n  };\r\n\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  onSaveEditText = () => {\r\n    this.props.onEditMessage(this.props.message, this.state.editText);\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { message, onRemoveMessage } = this.props;\r\n    const { editMode, editText } = this.state;\r\n\r\n    return (\r\n      <li>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editText}\r\n            onChange={this.onChangeEditText}\r\n          />\r\n        ) : (\r\n          <span>\r\n            <strong>\r\n              {message.user.username || message.user.userId}\r\n            </strong>{' '}\r\n            {message.text} {message.editedAt && <span>(Edited)</span>}\r\n          </span>\r\n        )}\r\n\r\n        {editMode ? (\r\n          <span>\r\n            <button onClick={this.onSaveEditText}>Save</button>\r\n            <button onClick={this.onToggleEditMode}>Reset</button>\r\n          </span>\r\n        ) : (\r\n          <button onClick={this.onToggleEditMode}>Edit</button>\r\n        )}\r\n\r\n        {!editMode && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemoveMessage(message.uid)}\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\nconst MessageList = ({\r\n  messages,\r\n  onEditMessage,\r\n  onRemoveMessage,\r\n}) => (\r\n  <ul>\r\n    {messages.map(message => (\r\n      <MessageItem\r\n        key={message.uid}\r\n        message={message}\r\n        onEditMessage={onEditMessage}\r\n        onRemoveMessage={onRemoveMessage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default MessageList;\r\n","import React, { Component } from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport MessageList from './MessageList';\r\n\r\nclass Messages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: '',\r\n      loading: false,\r\n      messages: [],\r\n      limit: 5,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForMessages();\r\n  }\r\n\r\n  onListenForMessages = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .messages()\r\n      .orderByChild('createdAt')\r\n      .limitToLast(this.state.limit)\r\n      .on('value', snapshot => {\r\n        const messageObject = snapshot.val();\r\n\r\n        if (messageObject) {\r\n          const messageList = Object.keys(messageObject).map(key => ({\r\n            ...messageObject[key],\r\n            uid: key,\r\n          }));\r\n\r\n          this.setState({\r\n            messages: messageList,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({ messages: null, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.messages().off();\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  onCreateMessage = (event, authUser) => {\r\n    this.props.firebase.messages().push({\r\n      text: this.state.text,\r\n      userId: authUser.uid,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n\r\n    this.setState({ text: '' });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onEditMessage = (message, text) => {\r\n    this.props.firebase.message(message.uid).set({\r\n      ...message,\r\n      text,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n  };\r\n\r\n  onRemoveMessage = uid => {\r\n    this.props.firebase.message(uid).remove();\r\n  };\r\n\r\n  onNextPage = () => {\r\n    this.setState(\r\n      state => ({ limit: state.limit + 5 }),\r\n      this.onListenForMessages,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    const { text, messages, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {!loading && messages && (\r\n              <button type=\"button\" onClick={this.onNextPage}>\r\n                More\r\n              </button>\r\n            )}\r\n\r\n            {loading && <div>Loading ...</div>}\r\n\r\n            {messages && (\r\n              <MessageList\r\n                messages={messages.map(message => ({\r\n                  ...message,\r\n                  user: users\r\n                    ? users[message.userId]\r\n                    : { userId: message.userId },\r\n                }))}\r\n                onEditMessage={this.onEditMessage}\r\n                onRemoveMessage={this.onRemoveMessage}\r\n              />\r\n            )}\r\n\r\n            {!messages && <div>There are no messages ...</div>}\r\n\r\n            <form\r\n              onSubmit={event =>\r\n                this.onCreateMessage(event, authUser)\r\n              }\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={this.onChangeText}\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Messages);\r\n","import Messages from './Messages';\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withAuthorization, withEmailVerification } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport Messages from '../Messages';\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      this.setState({\r\n        users: snapshot.val(),\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Home Page</h1>\r\n        <p>The Home Page is accessible by every signed in user.</p>\r\n\r\n        <Messages users={this.state.users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(HomePage);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n} from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: 'password',\r\n    provider: null,\r\n  },\r\n  {\r\n    id: 'google.com',\r\n    provider: 'googleProvider',\r\n  },\r\n  {\r\n    id: 'facebook.com',\r\n    provider: 'facebookProvider',\r\n  },\r\n  {\r\n    id: 'twitter.com',\r\n    provider: 'twitterProvider',\r\n  },\r\n];\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n        <LoginManagement authUser={authUser} />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nclass LoginManagementBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSignInMethods();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null }),\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password,\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(\r\n              signInMethod.id,\r\n            );\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === 'password' ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink,\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onLink(signInMethod.provider)}\r\n    >\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: '', passwordTwo: '' };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: '', passwordTwo: '' });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onlyOneLeft,\r\n      isEnabled,\r\n      signInMethod,\r\n      onUnlink,\r\n    } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginManagement = withFirebase(LoginManagementBase);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AccountPage);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n              <span>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\r\n                    state: { user },\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link>\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      user: null,\r\n      ...props.location.state,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .user(this.props.match.params.id)\r\n      .on('value', snapshot => {\r\n        this.setState({\r\n          user: snapshot.val(),\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.user(this.props.match.params.id).off();\r\n  }\r\n\r\n  onSendPasswordResetEmail = () => {\r\n    this.props.firebase.doPasswordReset(this.state.user.email);\r\n  };\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>User ({this.props.match.params.id})</h2>\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        {user && (\r\n          <div>\r\n            <span>\r\n              <strong>ID:</strong> {user.uid}\r\n            </span>\r\n            <span>\r\n              <strong>E-Mail:</strong> {user.email}\r\n            </span>\r\n            <span>\r\n              <strong>Username:</strong> {user.username}\r\n            </span>\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onSendPasswordResetEmail}\r\n              >\r\n                Send Password Reset\r\n              </button>\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserItem);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withAuthorization, withEmailVerification } from '../Session';\r\nimport { UserList, UserItem } from '../Users';\r\nimport * as ROLES from '../../constants/roles';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n    <p>The Admin Page is accessible by every signed in admin user.</p>\r\n\r\n    <Switch>\r\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser =>\r\n  authUser && authUser.roles.includes(ROLES.ADMIN);\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AdminPage);\r\n","import React, { Component } from 'react';\r\n\r\nclass AddItem extends Component {\r\n  search(e) {\r\n    if (e.key === 'Enter') {\r\n      const todayObj = new Date();\r\n      const todayStr =\r\n        todayObj.getFullYear() +\r\n        '-' +\r\n        (todayObj.getMonth() + 1) +\r\n        '-' +\r\n        todayObj.getDate();\r\n\r\n      console.log();\r\n      this.props.handleNewItem(todayStr, e.target.value);\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-add\">\r\n        <input type=\"text\" onKeyPress={event => this.search(event)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from './Firebase';\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-footer\">\r\n        <p>\r\n          completed today: <span>{this.props.completedToday}</span>\r\n        </p>\r\n\r\n        <p>\r\n          # created today: <span>{this.props.createdToday}</span>{' '}\r\n        </p>\r\n        <p>\r\n          # due today: <span>{this.props.dueToday}</span>\r\n        </p>\r\n        <p>\r\n          # overdue: <span>{this.props.overdue}</span>\r\n        </p>\r\n        <p>\r\n          Filter: <span>{this.props.filter}</span>\r\n        </p>\r\n        <p>\r\n          Sort: <span>{this.props.sort}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Footer);\r\n","import React, { Component } from 'react';\r\n\r\nexport function withDropDown(WrappedComponent) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { dropClass: '' };\r\n\r\n      this.showDropDown = this.showDropDown.bind(this);\r\n    }\r\n\r\n    showDropDown() {\r\n      if (this.state.dropClass) {\r\n        this.setState(prevState => (prevState['dropClass'] = ''));\r\n      } else {\r\n        this.setState(\r\n          prevState => (prevState['dropClass'] = 'showDrop'),\r\n        );\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          showDropDown={this.showDropDown}\r\n          dropClass={this.state.dropClass}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withDropDown } from './DropDown.js';\r\n\r\nclass SortBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button\r\n          type=\"submit\"\r\n          onClick={() => this.props.showDropDown()}\r\n          className=\"dropbtn\"\r\n        >\r\n          Sort\r\n        </button>\r\n        <div\r\n          id=\"myDropdown\"\r\n          className={'dropdown-content ' + this.props.dropClass}\r\n        >\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('pri');\r\n              this.props.showDropDown();\r\n            }}\r\n          >\r\n            Priority\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('context');\r\n              this.props.showDropDown();\r\n            }}\r\n          >\r\n            Context\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('project');\r\n              this.props.showDropDown();\r\n            }}\r\n          >\r\n            Project\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('');\r\n              this.props.showDropDown();\r\n            }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDropDown(SortBar);\r\n","import React, { Component } from 'react';\r\nimport { withDropDown } from './DropDown.js';\r\n\r\nclass FilterBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  search(e) {\r\n    if (e.key === 'Enter') {\r\n      this.props.setFilter(e.target.value);\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // generate buttons for the drop down based off given filters\r\n    let filterButtons;\r\n    if (this.props.filters) {\r\n      filterButtons = this.props.filters.map(filter => (\r\n        <button\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            this.props.setFilter(filter);\r\n            this.props.showDropDown();\r\n          }}\r\n          onFocus={() => console.log('gained focus')}\r\n        >\r\n          {filter}\r\n        </button>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"todo-filter\">\r\n        {/*\r\n        <input type=\"text\" onKeyPress={event => this.search(event)} />\r\n        <button\r\n          type=\"submit\"\r\n          onClick={() => this.props.resetFilter()}\r\n        >\r\n          Clear Filter\r\n        </button>\r\n        */}\r\n\r\n        <div className=\"dropdown\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => this.props.showDropDown()}\r\n            onBlur={() => console.log('lost focus')}\r\n            className=\"dropbtn\"\r\n          >\r\n            Filter\r\n          </button>\r\n          <div\r\n            id=\"myDropdown\"\r\n            className={'dropdown-content ' + this.props.dropClass}\r\n          >\r\n            {filterButtons}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => this.props.setFilter('')}\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDropDown(FilterBar);\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from './Firebase';\r\nimport SortWithDropDown from './SortWithDropDown.js';\r\nimport FilterWithDropDown from './FilterWithDropDown.js';\r\n\r\nimport '../css/Header.css';\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-header\">\r\n        <FilterWithDropDown\r\n          setFilter={this.props.setFilter}\r\n          filters={this.props.filters}\r\n          resetFilter={this.props.resetFilter}\r\n        />\r\n        <SortWithDropDown setSort={this.props.setSort} />\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => this.props.toggleCompleted()}\r\n          >\r\n            Complete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Header);\r\n","import React, { Component } from 'react';\r\nimport '../css/ToDoItem.css';\r\n\r\nclass ToDoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.item.completed) {\r\n      this.state = { itemClass: 'completed' };\r\n    } else {\r\n      this.state = { itemClass: 'show' };\r\n    }\r\n  }\r\n\r\n  handleChange(id) {\r\n    let itemClass = '';\r\n    if (this.state.itemClass === 'show') {\r\n      itemClass = 'completed';\r\n    } else {\r\n      itemClass = 'show';\r\n    }\r\n    this.setState(prevState => {\r\n      prevState.itemClass = itemClass;\r\n      return prevState;\r\n    });\r\n    this.props.handleChange(id, itemClass);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'todo-item ' + this.state.itemClass}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.props.item.completed}\r\n          onChange={() => this.handleChange(this.props.item.id)}\r\n        />\r\n        <div className={'list-text'}>\r\n          <p>{this.props.item.text}</p>\r\n        </div>\r\n\r\n        <div className=\"list-buttons\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => this.props.deleteItem(this.props.item.id)}\r\n          >\r\n            Edit\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => this.props.deleteItem(this.props.item.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { Component } from 'react';\r\nimport ToDoItem from './TodoItem';\r\nclass ItemList extends Component {\r\n  render() {\r\n    // if there are items create todoitems to render, otherwise don't render anything\r\n    let todoItems = null;\r\n    if (this.props.items) {\r\n      todoItems = this.props.items.map(cat => (\r\n        // change the null category to n/a for display purposes\r\n\r\n        <div className=\"item-list\">\r\n          <h3 className=\"category\">{cat[0]}</h3>\r\n          {cat.slice(1).map(item => (\r\n            <ToDoItem\r\n              key={item.id}\r\n              item={item}\r\n              handleChange={this.props.handleChange}\r\n              deleteItem={this.props.deleteItem}\r\n            />\r\n          ))}\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    return <div>{todoItems}</div>;\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from './Firebase';\r\nimport SortWithDropDown from './SortWithDropDown.js';\r\nimport FilterWithDropDown from './FilterWithDropDown.js';\r\n\r\nimport '../css/Header.css';\r\nclass MobileMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { filterShow: '', sortShow: '', statsShow: '' };\r\n  }\r\n\r\n  displayFilter() {\r\n    this.setState(() => ({\r\n      filterShow: '',\r\n      sortShow: '',\r\n      statsShow: '',\r\n    }));\r\n    if (!this.state.filterShow) {\r\n      this.setState(\r\n        prevState => (prevState['filterShow'] = 'mobile-show'),\r\n      );\r\n    }\r\n  }\r\n\r\n  displaySort() {\r\n    this.setState(() => ({\r\n      filterShow: '',\r\n      sortShow: '',\r\n      statsShow: '',\r\n    }));\r\n    if (!this.state.sortShow) {\r\n      this.setState(\r\n        prevState => (prevState['sortShow'] = 'mobile-show'),\r\n      );\r\n    }\r\n  }\r\n\r\n  displayStats() {\r\n    this.setState(() => ({\r\n      filterShow: '',\r\n      sortShow: '',\r\n      statsShow: '',\r\n    }));\r\n    if (!this.state.statsShow) {\r\n      this.setState(\r\n        prevState => (prevState['statsShow'] = 'mobile-show'),\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    // generate buttons for the drop down based off given filters\r\n    let filterButtons;\r\n    if (this.props.filters) {\r\n      filterButtons = this.props.filters.map(filter => (\r\n        <button\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            this.props.setFilter(filter);\r\n            this.displayFilter();\r\n          }}\r\n          onFocus={() => console.log('gained focus')}\r\n        >\r\n          {filter}\r\n        </button>\r\n      ));\r\n    }\r\n    return (\r\n      <div className=\"todo-menu-wrapper\">\r\n        <div className=\"mobile-menu\">\r\n          <button\r\n            className={this.state.filterShow}\r\n            onClick={() => this.displayFilter()}\r\n          >\r\n            Filter\r\n          </button>\r\n          <button\r\n            className={this.state.sortShow}\r\n            onClick={() => this.displaySort()}\r\n          >\r\n            Sort\r\n          </button>\r\n          <button\r\n            className={this.state.statsShow}\r\n            onClick={() => this.displayStats()}\r\n          >\r\n            Stats\r\n          </button>\r\n        </div>\r\n        <div className={'mobile-filter ' + this.state.filterShow}>\r\n          {filterButtons}\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setFilter('');\r\n              this.displayFilter();\r\n            }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n        <div className={'mobile-sort ' + this.state.sortShow}>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('pri');\r\n              this.displaySort();\r\n            }}\r\n          >\r\n            Priority\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('context');\r\n              this.displaySort();\r\n            }}\r\n          >\r\n            Context\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('project');\r\n              this.displaySort();\r\n            }}\r\n          >\r\n            Project\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.props.setSort('');\r\n              this.displaySort();\r\n            }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n        <div className={'mobile-stats ' + this.state.statsShow}>\r\n          <p>\r\n            completed today: <span>{this.props.completedToday}</span>\r\n          </p>\r\n          <p>\r\n            # created today: <span>{this.props.createdToday}</span>{' '}\r\n          </p>\r\n          <p>\r\n            # due today: <span>{this.props.dueToday}</span>\r\n          </p>\r\n          <p>\r\n            # overdue: <span>{this.props.overdue}</span>\r\n          </p>\r\n          <p>\r\n            Filter: <span>{this.props.filter}</span>\r\n          </p>\r\n          <p>\r\n            Sort: <span>{this.props.sort}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(MobileMenu);\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nimport AddItem from '../AddItem';\r\nimport Footer from '../Footer';\r\nimport Header from '../Header';\r\nimport ItemList from '../ItemList';\r\nimport MobileMenu from '../MobileMenu';\r\nimport '../../css/ToDo.css';\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      filter: '',\r\n      filters: [],\r\n      sort: '',\r\n      showCompleted: true,\r\n    };\r\n\r\n    // give the window this component so that methods can be called based off of strings\r\n    window.todoComponent = this;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleNewItem = this.handleNewItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.handleFiter = this.handleFilter.bind(this);\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.resetFilter = this.resetFilter.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.setSort = this.setSort.bind(this);\r\n    this.toggleCompleted = this.toggleCompleted.bind(this);\r\n  }\r\n\r\n  handleFilter() {}\r\n\r\n  handleSort() {}\r\n\r\n  getNumToday(key) {\r\n    let numToday = 0;\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.props.firebase.db\r\n          .ref('/todosData/' + user.uid)\r\n          .once('value')\r\n          .then(snap => {\r\n            snap.forEach(itemSnap => {\r\n              let d = new Date();\r\n              let today =\r\n                d.getFullYear() +\r\n                '-' +\r\n                (d.getMonth() + 1) +\r\n                '-' +\r\n                d.getDate();\r\n              if (itemSnap.val()[key] === today) {\r\n                numToday++;\r\n              }\r\n            });\r\n            // set state needs to be placed in the callback function because otherwise set state will be execute before promise is realized\r\n            this.setState(\r\n              prevState => (prevState[key + 'Today'] = numToday),\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  getCreatedToday() {\r\n    this.getNumToday('created');\r\n  }\r\n\r\n  getCompletedToday() {\r\n    this.getNumToday('completed');\r\n  }\r\n\r\n  getDueToday() {\r\n    this.getNumToday('due');\r\n  }\r\n\r\n  // determines how many items on the list are overdue.\r\n  // overdue means that the item is not completed and the due date was before the current date\r\n  getOverdue() {\r\n    let numOverdue = 0;\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.props.firebase.db\r\n          .ref('/todosData/' + user.uid)\r\n          .once('value')\r\n          .then(snap => {\r\n            snap.forEach(itemSnap => {\r\n              let d = new Date(this.state.today);\r\n              let dueD = null;\r\n              if (itemSnap.val()['due']) {\r\n                dueD = new Date(itemSnap.val()['due']);\r\n              }\r\n              let compD = null;\r\n              if (itemSnap.val()['completed']) {\r\n                compD = new Date(itemSnap.val()['completed']);\r\n              }\r\n\r\n              if (dueD && dueD < d && !compD) {\r\n                numOverdue++;\r\n              }\r\n            });\r\n            // set state needs to be placed in the callback function because otherwise set state will be execute before promise is realized\r\n            this.setState(\r\n              prevState => (prevState['overdue'] = numOverdue),\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // runs all methods made to update information about current items\r\n  runAllGetTodays() {\r\n    this.getDueToday();\r\n    this.getCompletedToday();\r\n    this.getCreatedToday();\r\n    this.getOverdue();\r\n  }\r\n\r\n  // handles the completed checkbox\r\n  handleChange(id, itemClass) {\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        let uCompleted = '';\r\n        let uText = '';\r\n        if (itemClass === 'show') {\r\n          uText = this.state.todos[id].text.replace(\r\n            'x: ' + this.state.todos[id].completed,\r\n            '',\r\n          );\r\n          uCompleted = '';\r\n        } else {\r\n          const todayObj = new Date();\r\n          const todayStr =\r\n            todayObj.getFullYear() +\r\n            '-' +\r\n            (todayObj.getMonth() + 1) +\r\n            '-' +\r\n            todayObj.getDate();\r\n\r\n          uCompleted = todayStr;\r\n          uText =\r\n            'x: ' + uCompleted + ' ' + this.state.todos[id].text;\r\n        }\r\n        let updates = {};\r\n\r\n        updates[\r\n          '/todosData/' + user.uid + '/' + id + '/text'\r\n        ] = uText;\r\n        updates[\r\n          '/todosData/' + user.uid + '/' + id + '/completed'\r\n        ] = uCompleted;\r\n\r\n        this.props.firebase.db.ref().update(updates);\r\n      }\r\n      // update the totals\r\n      this.runAllGetTodays();\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      this.props.firebase.db\r\n        .ref('/todosData/' + user.uid + '/' + id)\r\n        .remove();\r\n\r\n      // decrement all by 1\r\n      this.state.userDbRef.once('value').then(snap => {\r\n        let updates = {};\r\n        // iterate through the children of the snapshot\r\n        snap.forEach(itemSnap => {\r\n          if (itemSnap.child('id').val() > id) {\r\n            let newId = itemSnap.child('id').val() - 1;\r\n            // update the id\r\n            updates[newId + '/id'] = newId;\r\n            // write the new entry\r\n            this.props.firebase.db\r\n              .ref('/todosData/' + user.uid)\r\n              .child(newId)\r\n              .set(itemSnap.val());\r\n            // del the old entry\r\n            this.props.firebase.db\r\n              .ref('/todosData/' + user.uid)\r\n              .child(itemSnap.key)\r\n              .remove();\r\n          }\r\n        });\r\n        this.props.firebase.db\r\n          .ref('/todosData/' + user.uid)\r\n          .update(updates);\r\n\r\n        // update the totals\r\n        this.runAllGetTodays();\r\n      });\r\n    });\r\n  }\r\n\r\n  // today - today's date in yyyy-mm-dd format\r\n  // value - the text entered by the user\r\n  handleNewItem(today, value) {\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // query for last inserted id\r\n        this.props.firebase.db\r\n          .ref('todosData/' + user.uid)\r\n          .orderByChild('id')\r\n          .limitToLast(1)\r\n          .once('value')\r\n          .then(snap => {\r\n            let newId = 0;\r\n            if (snap.val() !== null) {\r\n              // get the id for the next to be added item\r\n              newId = parseInt(Object.keys(snap.val())[0]) + 1;\r\n            }\r\n\r\n            // check for priority\r\n            const priRegex = /^\\(([A-Z])\\)\\s/;\r\n            const priMatches = value.match(priRegex);\r\n            let pri = '';\r\n\r\n            if (priMatches) {\r\n              pri = priMatches[1];\r\n            }\r\n\r\n            // check for context\r\n            const contextRegex = /(\\s@)(.*?)((?=\\s@)|$|\\s)/g;\r\n            let context = [];\r\n            let contextMatches;\r\n            // iterate through matches, use exec instead of //value.match(contextRegex);\r\n            while ((contextMatches = contextRegex.exec(value))) {\r\n              if (contextMatches) {\r\n                context.push(contextMatches[2]);\r\n              }\r\n            }\r\n\r\n            // check for project -> same as context\r\n            const projectRegex = /(\\s\\+)(.*?)((?=\\s\\+)|$|\\s)/g;\r\n            let project = [];\r\n            let projectMatches;\r\n            // iterate through matches, use exec instead of //value.match(contextRegex);\r\n            while ((projectMatches = projectRegex.exec(value))) {\r\n              if (projectMatches) {\r\n                project.push(projectMatches[2]);\r\n              }\r\n            }\r\n\r\n            // could rewrite this to allow for any custom metadata to be input as long as it follows the : format\r\n\r\n            // check for a due date\r\n            // required to be in yyyy-mm-dd or a keyword day\r\n            const dateRegex = /(due:)((\\d){4}-(\\d){1,2}-(\\d){1,2}|friday|monday|tuesday|thursday|wednesday|saturday|sunday|today|tomorrow)(\\s)*/;\r\n            const dueMatches = value.match(dateRegex);\r\n            let due = '';\r\n            let conv_due = '';\r\n            // if there is a due date specified\r\n            if (dueMatches) {\r\n              // init array that converts day to number\r\n              const days = [\r\n                'sunday',\r\n                'monday',\r\n                'tuesday',\r\n                'wednesday',\r\n                'thursday',\r\n                'friday',\r\n                'saturday',\r\n              ];\r\n              // convert keywords to yyyy-mm-dd format\r\n              const todayDate = new Date();\r\n              due = dueMatches[2];\r\n              conv_due = due;\r\n              const dayOfWeek = todayDate.getDay();\r\n              const dueDayofWeek = days.indexOf(due);\r\n\r\n              if (due === 'today') {\r\n                conv_due = today;\r\n              } else if (due === 'tomorrow') {\r\n                conv_due = new Date(\r\n                  todayDate.getFullYear(),\r\n                  todayDate.getMonth(),\r\n                  todayDate.getDate() + 1,\r\n                );\r\n                conv_due =\r\n                  conv_due.getFullYear() +\r\n                  '-' +\r\n                  (conv_due.getMonth() + 1) +\r\n                  '-' +\r\n                  conv_due.getDate();\r\n              } else if (days.includes(due)) {\r\n                let deltaDays = (7 + (dueDayofWeek - dayOfWeek)) % 7;\r\n                // assume that the user means the next occurence of the day that isn't today\r\n                deltaDays = deltaDays === 0 ? 7 : deltaDays;\r\n                conv_due = new Date(\r\n                  todayDate.getFullYear(),\r\n                  todayDate.getMonth(),\r\n                  todayDate.getDate() + deltaDays,\r\n                );\r\n                conv_due =\r\n                  conv_due.getFullYear() +\r\n                  '-' +\r\n                  (conv_due.getMonth() + 1) +\r\n                  '-' +\r\n                  conv_due.getDate();\r\n              }\r\n              // end of conversion to yyyy-mm-dd\r\n\r\n              // convert the text to yyyy-mm-dd as well\r\n              value = value.replace(due, conv_due);\r\n            }\r\n            // add the new item\r\n            this.props.firebase.db\r\n              .ref('todosData/' + user.uid + '/' + newId)\r\n              .set({\r\n                id: newId,\r\n                text: value + ' ' + today,\r\n                completed: '',\r\n                created: today,\r\n                due: conv_due,\r\n                pri: pri,\r\n                context: context,\r\n                project: project,\r\n              });\r\n\r\n            // update the totals\r\n            this.runAllGetTodays();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        const dbRefObject = this.props.firebase.db.ref(\r\n          '/todosData/' + user.uid,\r\n        );\r\n\r\n        // get the filters from the user's config\r\n        let filters;\r\n        this.props.firebase.db\r\n          .ref('/todosConfig/' + user.uid + '/filters')\r\n          .once('value')\r\n          .then(snap => (filters = snap.val()));\r\n        const todayDate = new Date();\r\n        const today =\r\n          todayDate.getFullYear() +\r\n          '-' +\r\n          (todayDate.getMonth() + 1) +\r\n          '-' +\r\n          todayDate.getDate();\r\n\r\n        // get todo items\r\n        dbRefObject.on('value', snap => {\r\n          this.setState(() => {\r\n            return {\r\n              todos: snap.val(),\r\n              userDbRef: dbRefObject,\r\n              uid: user.id,\r\n              today: today,\r\n              filters: filters,\r\n              loading: false,\r\n            };\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    // update the totals\r\n    this.runAllGetTodays();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.userDbRef.off();\r\n    this.setState(() => null);\r\n  }\r\n\r\n  filterBy(item, tag) {\r\n    return item.text.includes(tag);\r\n  }\r\n\r\n  filterItems(items) {\r\n    // get the tags that will be used to filter\r\n    const filters = this.state.filter.split();\r\n    filters.forEach(filter => {\r\n      // naive implementation\r\n      // fails when the user has text like '@abc wash the dog' and they filter for context @abc\r\n\r\n      // filter is a context or project a space must proceed\r\n      if (filter.startsWith('@') || filter.startsWith('+')) {\r\n        items = items.filter(item =>\r\n          item.text.includes(' ' + filter),\r\n        );\r\n      } else {\r\n        items = items.filter(item => item.text.includes(filter));\r\n      }\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  sortByPri(items) {\r\n    let sortedItems = [];\r\n    let priorities = {};\r\n    items.forEach(item => {\r\n      if (priorities[item.pri] !== undefined) {\r\n      } else {\r\n        priorities[item.pri] = sortedItems.length;\r\n        sortedItems.push([item.pri]);\r\n      }\r\n\r\n      const index = priorities[item.pri];\r\n      sortedItems[index].push(item);\r\n    });\r\n    sortedItems = sortedItems.sort((a, b) => {\r\n      if (a[0] && !b[0]) {\r\n        return -1;\r\n      } else if (!a[0] && b[0]) {\r\n        return 1;\r\n      } else {\r\n        return a[0].charCodeAt(0) - b[0].charCodeAt(0);\r\n      }\r\n    });\r\n    return sortedItems;\r\n  }\r\n\r\n  sortByContext(items) {\r\n    let sortedItems = [];\r\n    let contexts = {};\r\n    items.forEach(item => {\r\n      if (!item.context) {\r\n        item.context = [''];\r\n      }\r\n      // iterate through the contexts\r\n      item.context.forEach(context => {\r\n        if (contexts[context] !== undefined) {\r\n        } else {\r\n          contexts[context] = sortedItems.length;\r\n          sortedItems.push([context]);\r\n        }\r\n\r\n        const index = contexts[context];\r\n        sortedItems[index].push(item);\r\n      });\r\n    });\r\n\r\n    sortedItems = sortedItems.sort((a, b) => {\r\n      if (a[0] && !b[0]) {\r\n        return -1;\r\n      } else if (!a[0] && b[0]) {\r\n        return 1;\r\n      } else {\r\n        return a[0].charCodeAt(0) - b[0].charCodeAt(0);\r\n      }\r\n    });\r\n\r\n    return sortedItems;\r\n  }\r\n\r\n  sortByProject(items) {\r\n    let sortedItems = [];\r\n    let projects = {};\r\n    items.forEach(item => {\r\n      if (!item.project) {\r\n        item.project = [''];\r\n      }\r\n      // iterate through the projects\r\n      item.project.forEach(project => {\r\n        if (projects[project] !== undefined) {\r\n        } else {\r\n          projects[project] = sortedItems.length;\r\n          sortedItems.push([project]);\r\n        }\r\n\r\n        const index = projects[project];\r\n        sortedItems[index].push(item);\r\n      });\r\n    });\r\n\r\n    sortedItems = sortedItems.sort((a, b) => {\r\n      if (a[0] && !b[0]) {\r\n        return -1;\r\n      } else if (!a[0] && b[0]) {\r\n        return 1;\r\n      } else {\r\n        return a[0].charCodeAt(0) - b[0].charCodeAt(0);\r\n      }\r\n    });\r\n\r\n    return sortedItems;\r\n  }\r\n\r\n  sortItems(items) {\r\n    const sortType = this.state.sort;\r\n    // call the method sortBy<___> with the given items\r\n    const fName =\r\n      'sortBy' + sortType.charAt(0).toUpperCase() + sortType.slice(1);\r\n    const sortedItems = window.todoComponent[fName](items);\r\n    if (sortedItems.length > 0) {\r\n      // change null category to n/a for display purposes\r\n      if (!sortedItems[sortedItems.length - 1][0]) {\r\n        sortedItems[sortedItems.length - 1][0] = 'n/a';\r\n      }\r\n    }\r\n\r\n    return sortedItems;\r\n  }\r\n\r\n  resetFilter() {\r\n    this.setState(prevState => (prevState['filter'] = ''));\r\n  }\r\n\r\n  setFilter(filter) {\r\n    this.setState(prevState => (prevState['filter'] = filter));\r\n  }\r\n\r\n  setSort(sortContext) {\r\n    this.setState(prevState => (prevState['sort'] = sortContext));\r\n  }\r\n\r\n  toggleCompleted() {\r\n    this.setState(\r\n      prevState =>\r\n        (prevState['showCompleted'] = !prevState['showCompleted']),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // currently set to also sort by priortiy, next step is to setup sort options / add more stuff\r\n    let todoItems = null;\r\n    if (this.state.todos) {\r\n      todoItems = this.state.todos;\r\n      if (this.state.filter) {\r\n        todoItems = this.filterItems(todoItems);\r\n      }\r\n\r\n      todoItems = todoItems.filter(item => !item.completed);\r\n      // if items that are completed are meant to be shown, add them to the items being displayed\r\n      if (this.state.showCompleted) {\r\n        todoItems = todoItems.concat(\r\n          this.state.todos.filter(item => item.completed),\r\n        );\r\n      }\r\n\r\n      if (this.state.sort) {\r\n        todoItems = this.sortItems(todoItems);\r\n      } else {\r\n        todoItems = [['', ...todoItems]];\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <MobileMenu\r\n          toggleCompleted={this.toggleCompleted}\r\n          filters={this.state.filters}\r\n          setFilter={this.setFilter}\r\n          setSort={this.setSort}\r\n          resetFilter={this.resetFilter}\r\n          createdToday={this.state.createdToday}\r\n          completedToday={this.state.completedToday}\r\n          dueToday={this.state.dueToday}\r\n          overdue={this.state.overdue}\r\n          sort={this.state.sort}\r\n          filter={this.state.filter}\r\n          showCompleted={this.state.showCompleted}\r\n        />\r\n        <Header\r\n          setFilter={this.setFilter}\r\n          setSort={this.setSort}\r\n          resetFilter={this.resetFilter}\r\n          toggleCompleted={this.toggleCompleted}\r\n          filters={this.state.filters}\r\n        />\r\n\r\n        <AddItem handleNewItem={this.handleNewItem} />\r\n\r\n        <ItemList\r\n          handleChange={this.handleChange}\r\n          deleteItem={this.deleteItem}\r\n          items={todoItems}\r\n        />\r\n        <Footer\r\n          uid={this.state.uid}\r\n          createdToday={this.state.createdToday}\r\n          completedToday={this.state.completedToday}\r\n          dueToday={this.state.dueToday}\r\n          overdue={this.state.overdue}\r\n          sort={this.state.sort}\r\n          filter={this.state.filter}\r\n          showCompleted={this.state.showCompleted}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Todo);\r\n","import React, { Component } from 'react';\r\n\r\nclass AddItem extends Component {\r\n  search(e) {\r\n    if (e.key === 'Enter') {\r\n      this.props.handleNewFilter(e.target.value);\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-add\">\r\n        <h2>Add a filter:</h2>\r\n        <input type=\"text\" onKeyPress={event => this.search(event)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nimport AddFilter from '../AddFilter';\r\n\r\nclass ConfigPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { filters: [] };\r\n\r\n    this.handleNewFilter = this.handleNewFilter.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // acquire filters\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.props.firebase.db\r\n          .ref('/todosConfig/' + user.uid + '/filters')\r\n          .on('value', snap => {\r\n            this.setState(\r\n              prevState => (prevState['filters'] = snap.val()),\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleNewFilter(newFilter) {\r\n    this.props.firebase.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.props.firebase.db\r\n          .ref('/todosConfig/' + user.uid + '/filters')\r\n          .limitToLast(1)\r\n          .once('value')\r\n          .then(snap => {\r\n            let newId = 0;\r\n            if (snap.val() !== null) {\r\n              // get the id for the next to be added item\r\n              newId = parseInt(Object.keys(snap.val())[0]) + 1;\r\n            }\r\n\r\n            let updates = {};\r\n            updates[\r\n              'todosConfig/' + user.uid + '/filters/' + newId\r\n            ] = newFilter;\r\n            this.props.firebase.db.ref().update(updates);\r\n\r\n            console.log(newId);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //hello\r\n    let filters;\r\n    if (this.state.filters) {\r\n      filters = this.state.filters.map(filter => <p>{filter}</p>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Current Filters:</h1>\r\n        {filters}\r\n        <AddFilter handleNewFilter={this.handleNewFilter} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(ConfigPage);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport TodoPage from '../Todo';\r\nimport ConfigPage from '../Config';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nimport '../../css/App.css';\r\n\r\nconst App = () => (\r\n  <Router basename={'/todo-list'}>\r\n    <div>\r\n      <Navigation />\r\n\r\n      <Route path={ROUTES.TODO} component={TodoPage} />\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n      <Route path={ROUTES.CONFIG} component={ConfigPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}